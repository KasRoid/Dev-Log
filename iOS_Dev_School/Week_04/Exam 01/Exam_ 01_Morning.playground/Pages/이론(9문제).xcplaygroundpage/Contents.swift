//: [Previous](@previous)
import UIKit

/***************************************************
 1. Array, Set, Dictionary 의 차이점에 대해 설명하고 예시 코드 작성
 ***************************************************/
var sampleArray : Array<Int> = [1, 2, 3, 3] // 데이터의 순서가 존재하며 같은 값이 존재할 수 있다.
var sampleSet : Set<Int> = [1, 2, 3, 3] // 데이터의 순서가 없고 같은 값이 존재할 수 없다.
var sampleDictionary : Dictionary<String, Int> = ["one" : 1, "two" : 2, "three" : 3, "anotherThree" : 3] // 데이터의 순서가 없고 키값이 다른 경우 벨류값으로 같은 값을 할당할 수 있다.


/***************************************************
 2. Value Type, Reference Type 에 대한 예시와 그 차이점에 대해 설명
 ***************************************************/

/*
Value Type: Struct 가 대표적인 예시로 값을 복사해서 가져온다. 복사하여 가져온 값을 변경하더라도 원본의 값은 변경되지 않는다.
Reference Type: Class 가 대표적인 예시로 값을 복사해서 가져오는 것이 아니라 메모리의 주소를 가져온다. 즉 원본과 복사된 변수가 참조하는 메모리의 주소가 같다면 둘 중 하나를 변경한 경우 다른 하나의 내용도 변경된다.
*/

/***************************************************
 3. Application의 LifeCycle의 각 상태에 대해 설명
 ***************************************************/



/***************************************************
 4. ViewController LifeCycle의 각 상태에 대해 설명
 ***************************************************/

/*
 viewWillAppear
 viewDidAppear
 viewWillDisappear
 viewDidDisappear
 */


/***************************************************
 5. 다음 4개의 키워드 (continue, break, return, fallthrough)가 쓰이는 위치와 역할에 대해 각각 설명
 ***************************************************/

/*
 continue: ?
 break: 조건이 만족할 경우 다음 조건을 확인하지않고 무조건 빠져나온다.
 return: 값을 돌려준다.
 fallthrough: 조건이 만족하더라도 다음 조건으로 계속 진행한다.
 */


/***************************************************
 6. Init 메서드가 필요한 경우와 그렇지 않은 경우의 차이점에 대해 설명
 ***************************************************/

/*
 class에서 어떠한 parameter 를 받을 때 그 parameter 의 값이 class 내에서 정의되지 않은 경우 init 을 사용하여 class 가 생성될 때 해당 값을 입력할 수 있도록 한다.
 */


/***************************************************
 7. Access Level 을 각 단계별로 나열하고 그 차이점에 대해 설명
 ***************************************************/

/*
open - 최상위 access level 로 framework 나 library 제작에 사용되는듯??
public - open 과 비슷한 것 같지만 정확한 차이점은 모름..
 중간레벨(명칭이 생각나지 않음) - 별도로 선언하지 않으면 자동으로 적용되는 access level.
fileprivate - 해당 파일 내에서 함수 및 변수를 자유롭게 사용가능
private - 변수 또는 함수 내에서만 선언된 함수에 접근 가능
*/


/***************************************************
 8. OOP 4대 특성에 대해 나열하고 각 특성에 대해 아는 만큼 설명 및 예시 코드 작성
 ***************************************************/




/***************************************************
 9. Frame 과 Bounds가 무엇이고, 둘의 차이점은 어떤 것이 있는지 설명
 ***************************************************/

/*
Frame: 어떠한 view 객체의 둘레, frame 을 옮기면 해당 객체에 subview 로 있는 객체도 같은 방향으로 함께 옮겨진다.
Bounds: bounds 를 옮기면 해당 객체에 subview 로 있는 객체는 navigation 지도가 움직이듯 반대방향으로 움직이게 된다.
*/

/***************************************************
 위 개념들은 아직 익숙치 않아서 답변하지 못한 분들이 많을 수 있지만
 중요한 내용들이니 답하지 못한 질문들은 체크해두었다가 천천히 공부하세요.
 ***************************************************/


//: [Next](@next)
